[{"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\index.js":"1","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\App.js":"2","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\routes.js":"3","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\Login\\index.jsx":"4","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\Admin\\index.jsx":"5","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\LoginBox\\index.jsx":"6","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Button\\index.jsx":"7","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\InputMedium\\index.jsx":"8","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Header\\index.jsx":"9","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\LeftMenu\\index.jsx":"10","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Main\\index.jsx":"11","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Action\\index.jsx":"12","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\User\\index.jsx":"13","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\MedicalCenter\\index.jsx":"14","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Exam\\index.jsx":"15","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\services\\mask\\index.js":"16","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\MedicalRecord\\index.jsx":"17","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\MedicalRecord\\Record\\index.jsx":"18"},{"size":198,"mtime":1610636360298,"results":"19","hashOfConfig":"20"},{"size":159,"mtime":1610644266886,"results":"21","hashOfConfig":"20"},{"size":489,"mtime":1610742270858,"results":"22","hashOfConfig":"20"},{"size":304,"mtime":1612400212000,"results":"23","hashOfConfig":"20"},{"size":604,"mtime":1612399704173,"results":"24","hashOfConfig":"20"},{"size":3141,"mtime":1612400342049,"results":"25","hashOfConfig":"20"},{"size":301,"mtime":1610738681178,"results":"26","hashOfConfig":"20"},{"size":297,"mtime":1610647047728,"results":"27","hashOfConfig":"20"},{"size":835,"mtime":1612399704202,"results":"28","hashOfConfig":"20"},{"size":718,"mtime":1611265712310,"results":"29","hashOfConfig":"20"},{"size":4422,"mtime":1611533331975,"results":"30","hashOfConfig":"20"},{"size":972,"mtime":1611011546904,"results":"31","hashOfConfig":"20"},{"size":10998,"mtime":1612396905603,"results":"32","hashOfConfig":"20"},{"size":587,"mtime":1612399704173,"results":"33","hashOfConfig":"20"},{"size":5851,"mtime":1611524744227,"results":"34","hashOfConfig":"20"},{"size":1355,"mtime":1611010297790,"results":"35","hashOfConfig":"20"},{"size":405,"mtime":1611013799925,"results":"36","hashOfConfig":"20"},{"size":1856,"mtime":1611013458231,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hxvgs2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\index.js",[],["79","80"],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\App.js",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\routes.js",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\Login\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\Admin\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\LoginBox\\index.jsx",["81","82","83","84"],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Button\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\InputMedium\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Header\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\LeftMenu\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Main\\index.jsx",["85"],"import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport \"./styles.css\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Action from '../../components/Action';\r\nimport User from '../../components/User';\r\nimport Exam from '../../components/Exam';\r\nimport MedicalRecord from '../../components/MedicalRecord';\r\n\r\nconst Main = ({ page }) => {\r\n  const [includeUser, setincludeUser] = useState(false);\r\n  const [includeExam, setincludeExam] = useState(false);\r\n  const [searchMedicalRecord, setsearchMedicalRecord] = useState(false);\r\n  const [actionToTake, setActionToTake] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [prontuary, setProntuary] = useState();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    // console.log(document.getElementById('prontuario').value);\r\n    // if(actionToTake === 'searchMedicalRecord') {\r\n    //   setsearchMedicalRecord(true);\r\n    // } else if(actionToTake === 'requestExam') {\r\n    //   setincludeExam(true);\r\n    // }\r\n  };\r\n\r\n  const handleForward = async () => {\r\n    let prontNumber = document.getElementById('prontuario').value\r\n    setProntuary(prontNumber);// console.log(document.getElementById('prontuario').value);\r\n    const response = await axios.get(`http://localhost:3010/user/checkProntuary/${prontNumber}`);\r\n    if(!response) return\r\n    if(actionToTake === 'searchMedicalRecord') {\r\n      setsearchMedicalRecord(true);\r\n    } else if(actionToTake === 'requestExam') {\r\n      setincludeExam(true);\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  let render;\r\n\r\n  switch (page) {\r\n    case 'admin':\r\n      render = !includeUser ? \r\n              <>\r\n                <Action title={'Incluir usuário'} type={'sum'} action={() => { setincludeUser(true)}}/>\r\n                <Action title={'Editar usuário'} type={'edit'} action={() => {}}/>\r\n                <Action title={'Excluir usuário'} type={'minus'}/>\r\n              </> : <User /> \r\n      break;\r\n    case 'medicalcenter': {\r\n      if (includeExam) {\r\n        render = <Exam prontuary={prontuary}/>\r\n      } else if(searchMedicalRecord) {\r\n        render = <MedicalRecord />\r\n      } else {\r\n        render = <>\r\n                    <Action title={'Pesquisar prontuário'} type={'search'} action={() => { \r\n                      handleClickOpen()\r\n                      setActionToTake('searchMedicalRecord')\r\n                      }}/>\r\n                    <Action title={'Solicitar exame'} type={'sum'} action={() => { \r\n                      handleClickOpen()\r\n                      setActionToTake('requestExam') }}/>\r\n                    <Action title={'Solicitar procedimento'} type={'sum'}/>\r\n                    <Action title={'Adicionar evolução'} type={'sum'}/>\r\n                </>\r\n      }\r\n    break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {\r\n            backgroundColor: '#5383FF'\r\n          }}}>\r\n          <DialogTitle id=\"form-dialog-title\" style={{ color: 'white'}}>Digite o prontuário</DialogTitle>\r\n          <DialogContent >\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"prontuario\"\r\n              label=\"Número do prontuário\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" style={{ color: 'white'}}>\r\n              Fechar\r\n            </Button>\r\n            <Button onClick={handleForward} color=\"primary\" style={{ color: 'white'}}>\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n        {/* <div id=\"search-box\"></div> */}\r\n        <div className=\"top-bar\">\r\n          \r\n        </div>\r\n        <div className=\"main-action\">\r\n          {/* <h3>Favoritos</h3> */}\r\n          {render}\r\n          {/* <MedicalRecord /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Action\\index.jsx",["86"],"import React from 'react';\r\n\r\nimport addCircle from '../../assets/images/icons/add_circle_outline_24px.svg';\r\nimport editCircle from '../../assets/images/icons/settings_24px.svg';\r\nimport minusCircle from '../../assets/images/icons/remove_circle_outline_24px.svg';\r\nimport searchCircle from '../../assets/images/icons/search_24px.svg';\r\n\r\nimport './styles.css';\r\n\r\nconst Action = ({title, type, action}) => {\r\n    let image;\r\n    switch(type) {\r\n        case 'sum':\r\n            image = addCircle;\r\n            break;\r\n        case 'edit':\r\n            image = editCircle;\r\n            break;\r\n        case 'minus': \r\n            image = minusCircle;\r\n            break;\r\n        case 'search':\r\n            image = searchCircle;\r\n            break;\r\n    }\r\n    return (\r\n        <button className=\"card\" onClick={action}>\r\n            <p className=\"card-title\">{title}</p>\r\n            <img src={image} alt={type}/>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Action;","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\User\\index.jsx",["87"],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\pages\\MedicalCenter\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\Exam\\index.jsx",["88","89","90","91","92","93","94","95"],"import React, {useEffect, useState} from 'react';\r\nimport DatePicker, {registerLocale} from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport br from 'date-fns/locale/pt-BR';\r\nimport axios from 'axios';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '../Button';\r\n\r\nimport './styles.css';\r\n\r\nregisterLocale('pt-BR', br)\r\n\r\nconst Exam = ({prontuary}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [examTypes, setExamTypes] = useState([]);\r\n    const [selectedExam, setSelectedExam] = useState();\r\n    const [unitsByExam, setUnitsByExam] = useState([]);\r\n    const [selectedUnit, setSelectedUnit] = useState();\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [startTime, setStartTime] = useState(new Date());\r\n    const [availableScheduleTime, setAvailableScheduleTime] = useState([]);\r\n    const [selectedScheduleTime, setSelectedScheduleTime] = useState();\r\n    \r\n    useEffect(async () => {\r\n        const response = await axios.get(`http://localhost:3010/exam/examNames`);\r\n        let exams = response.data.map(exam => exam.name);\r\n        setExamTypes(exams);\r\n        console.log(prontuary);\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if(selectedExam && selectedExam.length > 0) {\r\n            const response = await axios.get(`http://localhost:3010/exam/unitNamesByExam/${selectedExam}`);\r\n            let units = response.data;\r\n            setUnitsByExam(units);\r\n        }\r\n    }, [selectedExam]);\r\n\r\n    useEffect(async () => {\r\n        if(selectedExam && selectedUnit) {\r\n            const response = await axios.get(`http://localhost:3010/exam/availableAgenda/${selectedExam}&${selectedUnit}&${startDate.getMonth()}&${startDate.getUTCDate()}`);\r\n            if(response && response.data && response.data.length && response.data.length > 0) setAvailableScheduleTime(response.data);\r\n        }\r\n    }, [startDate]);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n      };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n            <div>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Exame agendado com sucesso\"}</DialogTitle>\r\n                    <DialogActions>\r\n                    <Button onSubmit={handleClose} text={\"Ok\"} />\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n            <form id=\"form\" onSubmit={handleSubmit}>\r\n                <fieldset>\r\n                    <legend>Exame</legend>\r\n                    <div className=\"all-labels\">\r\n                        <div className=\"label-row\">\r\n                            <div className=\"custom-label\">\r\n                                <label htmlFor=\"exam-type\">Tipo de exame</label>\r\n                                <input list=\"exams\" type=\"text\" name=\"exam-type\" style={{width: \"20rem\"}} onChange={(e) => setSelectedExam(e.target.value)}></input>\r\n                                <datalist id=\"exams\">\r\n                                    {examTypes.map((exam, key) => <option key={key.toString()} value={exam}  />)}\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"label-row\">\r\n                            <div className=\"custom-label\">\r\n                                <label htmlFor=\"unity\">Unidade</label>\r\n                                <input list=\"unity\" type=\"text\" name=\"unity\" style={{width: \"20rem\"}} onChange={(e) => setSelectedUnit(e.target.value)}></input>\r\n                                <datalist id=\"unity\">\r\n                                    {unitsByExam.map((unit, key) => <option key={key.toString()} value={unit} />)}\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"label-row\">\r\n                            <div className=\"custom-label\">\r\n                                <label htmlFor=\"date\">Data</label>\r\n                                <DatePicker minDate={new Date()} dateFormat=\"dd/MM/yy\" locale=\"pt-BR\" selected={startDate} onChange={date => setStartDate(date)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"label-row\">\r\n                            <div className=\"custom-label\">\r\n                                <label htmlFor=\"hour\">Horário</label>\r\n                                <input list=\"scheduleTime\" type=\"text\" name=\"scheduleTime\" onChange={ e => setSelectedScheduleTime(e.target.value)}></input>\r\n                                <datalist id=\"scheduleTime\">\r\n                                    {availableScheduleTime.map((schedule, key) => <option key={key.toString()} value={new Date(schedule).getHours() + 3 + \" hrs\"} />)}\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </fieldset>\r\n            </form>\r\n    \r\n            <div className=\"bottom-buttons\">\r\n                <Button  text={'Urgência'} color={'#FD9797'} form={\"form\"} onSubmit={handleClickOpen}/>\r\n                <Button  text={'Agendar'} form={\"form\"} onSubmit={handleClickOpen}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Exam;","C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\services\\mask\\index.js",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\MedicalRecord\\index.jsx",[],"C:\\Users\\Caio\\Documents\\GitHub\\Sistema-Z-de-Gestao-de-Saude\\frontend-sistemaz\\src\\components\\MedicalRecord\\Record\\index.jsx",["96","97","98"],"import React from 'react';\r\n\r\nimport './styles.css'\r\n\r\nimport addCircle from '../../../assets/images/icons/add_circle_outline_24px.svg';\r\nimport editCircle from '../../../assets/images/icons/settings_24px.svg';\r\nimport minusCircle from '../../../assets/images/icons/remove_circle_outline_24px.svg';\r\nimport viewCircle from '../../../assets/images/icons/visibility_24px_outlined.svg';\r\nimport downloadCircle from '../../../assets/images/icons/cloud_download_24px_outlined.svg';\r\n\r\nconst Record = ({title}) => {\r\n    return (\r\n        <div className=\"record-wrapper\">\r\n            <div className=\"record-header\">\r\n                <div>\r\n                    <p id=\"record-title\"><b>{title}</b></p>\r\n                </div>\r\n                <div className=\"record-icons\">\r\n                    <img src={addCircle} />\r\n                    <img src={minusCircle} />\r\n                    <img src={editCircle} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"record-items\">\r\n                <div className=\"record-column\">\r\n                    <p className=\"record-item-header-title\"><b>Nome</b></p>\r\n                    <p className=\"record-item\">Hemograma Completo</p>\r\n                </div>\r\n                <div className=\"record-column\">\r\n                    <p className=\"record-item-header-title\"><b>Data</b></p>\r\n                    <p className=\"record-item\">05/01/2020</p>\r\n                </div>\r\n                <div className=\"record-column\">\r\n                    <p className=\"record-item-header-title\"><b>Resultado</b></p>\r\n                    <div className=\"record-actions\">\r\n                        <img src={viewCircle} alt=\"\"/>\r\n                        <img src={downloadCircle} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Record;",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":49,"column":6,"nodeType":"110","endLine":49,"endColumn":14,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":52,"column":9,"nodeType":"105","messageId":"106","endLine":52,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":55,"column":3,"nodeType":"115","messageId":"116","endLine":84,"endColumn":4},{"ruleId":"113","severity":1,"message":"114","line":12,"column":5,"nodeType":"115","messageId":"116","endLine":25,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":59,"column":17,"nodeType":"119","messageId":"120","endLine":59,"endColumn":44},{"ruleId":"103","severity":1,"message":"121","line":23,"column":12,"nodeType":"105","messageId":"106","endLine":23,"endColumn":21},{"ruleId":"103","severity":1,"message":"122","line":23,"column":23,"nodeType":"105","messageId":"106","endLine":23,"endColumn":35},{"ruleId":"103","severity":1,"message":"123","line":25,"column":12,"nodeType":"105","messageId":"106","endLine":25,"endColumn":32},{"ruleId":"108","severity":1,"message":"124","line":27,"column":15,"nodeType":"125","endLine":32,"endColumn":6},{"ruleId":"108","severity":1,"message":"126","line":32,"column":8,"nodeType":"110","endLine":32,"endColumn":10,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"124","line":34,"column":15,"nodeType":"125","endLine":40,"endColumn":6},{"ruleId":"108","severity":1,"message":"124","line":42,"column":15,"nodeType":"125","endLine":47,"endColumn":6},{"ruleId":"108","severity":1,"message":"128","line":47,"column":8,"nodeType":"110","endLine":47,"endColumn":19,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":19,"column":21,"nodeType":"132","endLine":19,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":20,"column":21,"nodeType":"132","endLine":20,"endColumn":46},{"ruleId":"130","severity":1,"message":"131","line":21,"column":21,"nodeType":"132","endLine":21,"endColumn":45},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'DialogContent' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessProfile' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'openErrorDialog' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'startTime' is assigned a value but never used.","'setStartTime' is assigned a value but never used.","'selectedScheduleTime' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'prontuary'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'selectedExam' and 'selectedUnit'. Either include them or remove the dependency array.",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [accessProfile, history, logged]",{"range":"144","text":"145"},"Update the dependencies array to be: [prontuary]",{"range":"146","text":"147"},"Update the dependencies array to be: [selectedExam, selectedUnit, startDate]",{"range":"148","text":"149"},[1466,1474],"[accessProfile, history, logged]",[1320,1322],"[prontuary]",[2037,2048],"[selectedExam, selectedUnit, startDate]"]